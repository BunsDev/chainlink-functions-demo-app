/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AutomatedFunctionsConsumer,
  AutomatedFunctionsConsumerInterface,
} from "../../contracts/AutomatedFunctionsConsumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "_fulfillGasLimit",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_updateInterval",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EmptyArgs",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySecrets",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySource",
    type: "error",
  },
  {
    inputs: [],
    name: "RequestIsAlreadyPending",
    type: "error",
  },
  {
    inputs: [],
    name: "RequestIsNotPending",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderIsNotRegistry",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "OCRResponse",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum Functions.Location",
            name: "codeLocation",
            type: "uint8",
          },
          {
            internalType: "enum Functions.Location",
            name: "secretsLocation",
            type: "uint8",
          },
          {
            internalType: "enum Functions.CodeLanguage",
            name: "language",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "secrets",
            type: "bytes",
          },
          {
            internalType: "string[]",
            name: "args",
            type: "string[]",
          },
        ],
        internalType: "struct Functions.Request",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
    ],
    name: "estimateCost",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fulfillGasLimit",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "source",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "secrets",
        type: "bytes",
      },
      {
        internalType: "enum Functions.Location",
        name: "secretsLocation",
        type: "uint8",
      },
      {
        internalType: "string[]",
        name: "args",
        type: "string[]",
      },
    ],
    name: "generateRequest",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getDONPublicKey",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "handleOracleFulfillment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpkeepTimeStamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestResponse",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestCBOR",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "responseCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "_fulfillGasLimit",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_updateInterval",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "newRequestCBOR",
        type: "bytes",
      },
    ],
    name: "setRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "updateOracleAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upkeepCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200228c3803806200228c8339810160408190526200003491620001d4565b600080546001600160a01b0319166001600160a01b038616178155339081906001600160a01b038216620000af5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600280546001600160a01b0319166001600160a01b0384811691909117909155811615620000e257620000e28162000128565b5050506009556008805463ffffffff90921668010000000000000000026001600160601b03199092166001600160401b03909316929092171790555042600a556200024c565b336001600160a01b03821603620001825760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401620000a6565b600380546001600160a01b0319166001600160a01b03838116918217909255600254604051919216907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b60008060008060808587031215620001eb57600080fd5b84516001600160a01b03811681146200020357600080fd5b60208601519094506001600160401b03811681146200022157600080fd5b604086015190935063ffffffff811681146200023c57600080fd5b6060959095015193969295505050565b612030806200025c6000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c806379ba5097116100d8578063d4b391751161008c578063f7023bb611610066578063f7023bb61461030b578063fd2c80ae1461031e578063fffeb84e1461032757600080fd5b8063d4b39175146102b5578063eb197c77146102e5578063f2fde38b146102f857600080fd5b8063a3d3c0d2116100bd578063a3d3c0d21461029c578063bef3a2f0146102a5578063d328a91e146102ad57600080fd5b806379ba5097146102795780638da5cb5b1461028157600080fd5b8063381fc4b51161012f5780635b58d52d116101145780635b58d52d14610230578063688ecfd1146102505780636e04ff0d1461025857600080fd5b8063381fc4b5146102145780634585e33b1461021d57600080fd5b80630ca76175116101605780630ca76175146101c55780631aa46f59146101da57806324b93e3e146101e357600080fd5b8063089ea02e1461017c57806309c1ba2e14610198575b600080fd5b610185600a5481565b6040519081526020015b60405180910390f35b6008546101ac9067ffffffffffffffff1681565b60405167ffffffffffffffff909116815260200161018f565b6101d86101d3366004611534565b61032f565b005b61018560055481565b6008546101ff9068010000000000000000900463ffffffff1681565b60405163ffffffff909116815260200161018f565b610185600c5481565b6101d861022b3660046115ea565b6103d5565b61024361023e366004611640565b6105dd565b60405161018f919061176e565b610243610738565b61026b610266366004611781565b6107c6565b60405161018f9291906117b6565b6101d86107e3565b6002546040516001600160a01b03909116815260200161018f565b610185600b5481565b610243610898565b6102436108a5565b6102c86102c33660046118b1565b610934565b6040516bffffffffffffffffffffffff909116815260200161018f565b6101d86102f33660046119c3565b6109bd565b6101d8610306366004611a47565b610a15565b6101d8610319366004611a47565b610a29565b61018560095481565b610243610a4f565b60008381526001602052604090205483906001600160a01b03163314610381576040517fa0c5ec6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181526001602052604080822080546001600160a01b03191690555182917f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e691a26103cf848484610a5c565b50505050565b60006103ef604051806020016040528060008152506107c6565b509050806104445760405162461bcd60e51b815260206004820152601560248201527f54696d6520696e74657276616c206e6f74206d6574000000000000000000000060448201526064015b60405180910390fd5b42600a55600b54610456906001611a7a565b600b55600080546008546040517f28242b040000000000000000000000000000000000000000000000000000000081526001600160a01b03909216916328242b04916104c69167ffffffffffffffff8216916004916801000000000000000090910463ffffffff16908201611ac1565b6020604051808303816000875af11580156104e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105099190611b69565b905060008054906101000a90046001600160a01b03166001600160a01b0316635ab1bd536040518163ffffffff1660e01b8152600401602060405180830381865afa15801561055c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105809190611b82565b60008281526001602052604080822080546001600160a01b0319166001600160a01b039490941693909317909255905182917f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db891a2600555505050565b60606106196040805160c08101909152806000815260200160008152602001600081526020016060815260200160608152602001606081525090565b6106606000808b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525087959493925050610ac89050565b851561070857600085600181111561067a5761067a611b9f565b036106c6576106c187878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508593925050610b5f9050565b610708565b61070887878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508593925050610ba69050565b82156107225761072261071b8486611bb5565b8290610bd3565b61072b81610c16565b9998505050505050505050565b6004805461074590611a8d565b80601f016020809104026020016040519081016040528092919081815260200182805461077190611a8d565b80156107be5780601f10610793576101008083540402835291602001916107be565b820191906000526020600020905b8154815290600101906020018083116107a157829003601f168201915b505050505081565b60006060600954600a54426107db9190611bc2565b119150915091565b6003546001600160a01b0316331461083d5760405162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e657200000000000000000000604482015260640161043b565b600280546001600160a01b0319808216339081179093556003805490911690556040516001600160a01b03909116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b6006805461074590611a8d565b60008054604080517fd328a91e00000000000000000000000000000000000000000000000000000000815290516060936001600160a01b039093169263d328a91e92600480820193918290030181865afa158015610907573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261092f9190810190611bd5565b905090565b600080546001600160a01b031663d227d2458561095088610c16565b86866040518563ffffffff1660e01b81526004016109719493929190611c4c565b602060405180830381865afa15801561098e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b29190611c88565b90505b949350505050565b6109c5610eac565b60098390556008805463ffffffff861668010000000000000000026bffffffffffffffffffffffff1990911667ffffffffffffffff8816171790556004610a0d828483611cfc565b505050505050565b610a1d610eac565b610a2681610f08565b50565b610a31610eac565b600080546001600160a01b0319166001600160a01b03831617905550565b6007805461074590611a8d565b6006610a688382611dbd565b506007610a758282611dbd565b50600c54610a84906001611a7a565b600c5560405183907f7bab0ec163b5c132c72b8146ac4d6e067e82ed58f8b131150aa71c925891156290610abb9085908590611e7d565b60405180910390a2505050565b8051600003610b03576040517f22ce3edd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83836001811115610b1657610b16611b9f565b90816001811115610b2957610b29611b9f565b90525060408401828015610b3f57610b3f611b9f565b90818015610b4f57610b4f611b9f565b9052506060909301929092525050565b8051600003610b815760405163e889636f60e01b815260040160405180910390fd5b6020820160005b90816001811115610b9b57610b9b611b9f565b905250608090910152565b8051600003610bc85760405163e889636f60e01b815260040160405180910390fd5b602082016001610b88565b8051600003610c0e576040517ffe936cb700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a090910152565b6060610c35604051806040016040528060608152602001600081525090565b610c4181610100610fb2565b5060408051808201909152600c81527f636f64654c6f636174696f6e00000000000000000000000000000000000000006020820152610c8190829061101d565b8251610c9f906001811115610c9857610c98611b9f565b8290611039565b60408051808201909152600881527f6c616e67756167650000000000000000000000000000000000000000000000006020820152610cde90829061101d565b6040830151610cf5908015610c9857610c98611b9f565b60408051808201909152600681527f736f7572636500000000000000000000000000000000000000000000000000006020820152610d3490829061101d565b6060830151610d4490829061101d565b60a08301515115610df35760408051808201909152600481527f61726773000000000000000000000000000000000000000000000000000000006020820152610d8e90829061101d565b610d9781611063565b60005b8360a0015151811015610de957610dd78460a001518281518110610dc057610dc0611ea2565b60200260200101518361101d90919063ffffffff16565b80610de181611eb8565b915050610d9a565b50610df38161106e565b60808301515115610ea55760408051808201909152600f81527f736563726574734c6f636174696f6e00000000000000000000000000000000006020820152610e3d90829061101d565b610e5683602001516001811115610c9857610c98611b9f565b60408051808201909152600781527f73656372657473000000000000000000000000000000000000000000000000006020820152610e9590829061101d565b6080830151610ea5908290611079565b5192915050565b6002546001600160a01b03163314610f065760405162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015260640161043b565b565b336001600160a01b03821603610f605760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161043b565b600380546001600160a01b0319166001600160a01b03838116918217909255600254604051919216907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b604080518082019091526060815260006020820152610fd2602083611ed1565b15610ffa57610fe2602083611ed1565b610fed906020611bc2565b610ff79083611a7a565b91505b506020808301829052604080518085526000815283019091019052815b92915050565b61102a8260038351611082565b6110348282611191565b505050565b67ffffffffffffffff8111156110575761105382826111bf565b5050565b61105382600083611082565b610a268160046111f6565b610a268160076111f6565b61102a82600283515b60178167ffffffffffffffff16116110a7576103cf8360e0600585901b168317611207565b60ff8167ffffffffffffffff16116110e5576110ce836018611fe0600586901b1617611207565b506103cf8367ffffffffffffffff8316600161122c565b61ffff8167ffffffffffffffff16116111245761110d836019611fe0600586901b1617611207565b506103cf8367ffffffffffffffff8316600261122c565b63ffffffff8167ffffffffffffffff16116111655761114e83601a611fe0600586901b1617611207565b506103cf8367ffffffffffffffff8316600461122c565b61117a83601b611fe0600586901b1617611207565b506103cf8367ffffffffffffffff8316600861122c565b6040805180820190915260608152600060208201526111b883846000015151848551611252565b9392505050565b6111ca8260c2611207565b5061105382826040516020016111e291815260200190565b604051602081830303815290604052611079565b61103482601f611fe0600585901b16175b6040805180820190915260608152600060208201526111b8838460000151518461133c565b6040805180820190915260608152600060208201526109b5848560000151518585611397565b604080518082019091526060815260006020820152825182111561127557600080fd5b60208501516112848386611a7a565b11156112b7576112b7856112a7876020015187866112a29190611a7a565b611418565b6112b2906002611ef3565b61142f565b6000808651805187602083010193508088870111156112d65787860182525b505050602084015b6020841061131657805182526112f5602083611a7a565b9150611302602082611a7a565b905061130f602085611bc2565b93506112de565b51815160001960208690036101000a019081169019919091161790525083949350505050565b604080518082019091526060815260006020820152836020015183106113715761137184856020015160026112b29190611ef3565b835180516020858301018481535080850361138d576001810182525b5093949350505050565b60408051808201909152606081526000602082015260208501516113bb8584611a7a565b11156113cf576113cf856112a78685611a7a565b600060016113df84610100611fee565b6113e99190611bc2565b905085518386820101858319825116178152508051848701111561140d5783860181525b509495945050505050565b600081831115611429575081611017565b50919050565b815161143b8383610fb2565b506103cf8382611191565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561147f5761147f611446565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156114ae576114ae611446565b604052919050565b600067ffffffffffffffff8211156114d0576114d0611446565b50601f01601f191660200190565b600082601f8301126114ef57600080fd5b81356115026114fd826114b6565b611485565b81815284602083860101111561151757600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561154957600080fd5b83359250602084013567ffffffffffffffff8082111561156857600080fd5b611574878388016114de565b9350604086013591508082111561158a57600080fd5b50611597868287016114de565b9150509250925092565b60008083601f8401126115b357600080fd5b50813567ffffffffffffffff8111156115cb57600080fd5b6020830191508360208285010111156115e357600080fd5b9250929050565b600080602083850312156115fd57600080fd5b823567ffffffffffffffff81111561161457600080fd5b611620858286016115a1565b90969095509350505050565b80356002811061163b57600080fd5b919050565b60008060008060008060006080888a03121561165b57600080fd5b873567ffffffffffffffff8082111561167357600080fd5b61167f8b838c016115a1565b909950975060208a013591508082111561169857600080fd5b6116a48b838c016115a1565b90975095508591506116b860408b0161162c565b945060608a01359150808211156116ce57600080fd5b818a0191508a601f8301126116e257600080fd5b8135818111156116f157600080fd5b8b60208260051b850101111561170657600080fd5b60208301945080935050505092959891949750929550565b60005b83811015611739578181015183820152602001611721565b50506000910152565b6000815180845261175a81602086016020860161171e565b601f01601f19169290920160200192915050565b6020815260006111b86020830184611742565b60006020828403121561179357600080fd5b813567ffffffffffffffff8111156117aa57600080fd5b6109b5848285016114de565b82151581526040602082015260006109b56040830184611742565b80356001811061163b57600080fd5b600067ffffffffffffffff808411156117fb576117fb611446565b8360051b602061180c818301611485565b8681529350908401908084018783111561182557600080fd5b855b838110156118595780358581111561183f5760008081fd5b61184b8a828a016114de565b835250908201908201611827565b50505050509392505050565b600082601f83011261187657600080fd5b6111b8838335602085016117e0565b803567ffffffffffffffff8116811461163b57600080fd5b803563ffffffff8116811461163b57600080fd5b600080600080608085870312156118c757600080fd5b843567ffffffffffffffff808211156118df57600080fd5b9086019060c082890312156118f357600080fd5b6118fb61145c565b6119048361162c565b81526119126020840161162c565b6020820152611923604084016117d1565b604082015260608301358281111561193a57600080fd5b6119468a8286016114de565b60608301525060808301358281111561195e57600080fd5b61196a8a8286016114de565b60808301525060a08301358281111561198257600080fd5b61198e8a828601611865565b60a08301525095506119a591505060208601611885565b92506119b36040860161189d565b9396929550929360600135925050565b6000806000806000608086880312156119db57600080fd5b6119e486611885565b94506119f26020870161189d565b935060408601359250606086013567ffffffffffffffff811115611a1557600080fd5b611a21888289016115a1565b969995985093965092949392505050565b6001600160a01b0381168114610a2657600080fd5b600060208284031215611a5957600080fd5b81356111b881611a32565b634e487b7160e01b600052601160045260246000fd5b8082018082111561101757611017611a64565b600181811c90821680611aa157607f821691505b60208210810361142957634e487b7160e01b600052602260045260246000fd5b67ffffffffffffffff841681526000602060608184015260008554611ae581611a8d565b8060608701526080600180841660008114611b075760018114611b2157611b4f565b60ff1985168984015283151560051b890183019550611b4f565b8a6000528660002060005b85811015611b475781548b8201860152908301908801611b2c565b8a0184019650505b5050505063ffffffff861660408601525091506109b59050565b600060208284031215611b7b57600080fd5b5051919050565b600060208284031215611b9457600080fd5b81516111b881611a32565b634e487b7160e01b600052602160045260246000fd5b60006111b83684846117e0565b8181038181111561101757611017611a64565b600060208284031215611be757600080fd5b815167ffffffffffffffff811115611bfe57600080fd5b8201601f81018413611c0f57600080fd5b8051611c1d6114fd826114b6565b818152856020838501011115611c3257600080fd5b611c4382602083016020860161171e565b95945050505050565b67ffffffffffffffff85168152608060208201526000611c6f6080830186611742565b63ffffffff949094166040830152506060015292915050565b600060208284031215611c9a57600080fd5b81516bffffffffffffffffffffffff811681146111b857600080fd5b601f82111561103457600081815260208120601f850160051c81016020861015611cdd5750805b601f850160051c820191505b81811015610a0d57828155600101611ce9565b67ffffffffffffffff831115611d1457611d14611446565b611d2883611d228354611a8d565b83611cb6565b6000601f841160018114611d5c5760008515611d445750838201355b600019600387901b1c1916600186901b178355611db6565b600083815260209020601f19861690835b82811015611d8d5786850135825560209485019460019092019101611d6d565b5086821015611daa5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b815167ffffffffffffffff811115611dd757611dd7611446565b611deb81611de58454611a8d565b84611cb6565b602080601f831160018114611e205760008415611e085750858301515b600019600386901b1c1916600185901b178555610a0d565b600085815260208120601f198616915b82811015611e4f57888601518255948401946001909101908401611e30565b5085821015611e6d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000611e906040830185611742565b8281036020840152611c438185611742565b634e487b7160e01b600052603260045260246000fd5b600060018201611eca57611eca611a64565b5060010190565b600082611eee57634e487b7160e01b600052601260045260246000fd5b500690565b808202811582820484141761101757611017611a64565b600181815b80851115611f45578160001904821115611f2b57611f2b611a64565b80851615611f3857918102915b93841c9390800290611f0f565b509250929050565b600082611f5c57506001611017565b81611f6957506000611017565b8160018114611f7f5760028114611f8957611fa5565b6001915050611017565b60ff841115611f9a57611f9a611a64565b50506001821b611017565b5060208310610133831016604e8410600b8410161715611fc8575081810a611017565b611fd28383611f0a565b8060001904821115611fe657611fe6611a64565b029392505050565b60006111b88383611f4d56fea2646970667358221220da3fef15883588aec4b12840968456507feb9186132f45a4ebc1eccacc31292364736f6c63430008130033";

type AutomatedFunctionsConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AutomatedFunctionsConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AutomatedFunctionsConsumer__factory extends ContractFactory {
  constructor(...args: AutomatedFunctionsConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    oracle: PromiseOrValue<string>,
    _subscriptionId: PromiseOrValue<BigNumberish>,
    _fulfillGasLimit: PromiseOrValue<BigNumberish>,
    _updateInterval: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AutomatedFunctionsConsumer> {
    return super.deploy(
      oracle,
      _subscriptionId,
      _fulfillGasLimit,
      _updateInterval,
      overrides || {}
    ) as Promise<AutomatedFunctionsConsumer>;
  }
  override getDeployTransaction(
    oracle: PromiseOrValue<string>,
    _subscriptionId: PromiseOrValue<BigNumberish>,
    _fulfillGasLimit: PromiseOrValue<BigNumberish>,
    _updateInterval: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      oracle,
      _subscriptionId,
      _fulfillGasLimit,
      _updateInterval,
      overrides || {}
    );
  }
  override attach(address: string): AutomatedFunctionsConsumer {
    return super.attach(address) as AutomatedFunctionsConsumer;
  }
  override connect(signer: Signer): AutomatedFunctionsConsumer__factory {
    return super.connect(signer) as AutomatedFunctionsConsumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutomatedFunctionsConsumerInterface {
    return new utils.Interface(_abi) as AutomatedFunctionsConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AutomatedFunctionsConsumer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AutomatedFunctionsConsumer;
  }
}
