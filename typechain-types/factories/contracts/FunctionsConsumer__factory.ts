/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FunctionsConsumer,
  FunctionsConsumerInterface,
} from "../../contracts/FunctionsConsumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EmptyArgs",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySecrets",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySource",
    type: "error",
  },
  {
    inputs: [],
    name: "RequestIsAlreadyPending",
    type: "error",
  },
  {
    inputs: [],
    name: "RequestIsNotPending",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderIsNotRegistry",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "OCRResponse",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "addSimulatedRequestId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum Functions.Location",
            name: "codeLocation",
            type: "uint8",
          },
          {
            internalType: "enum Functions.Location",
            name: "secretsLocation",
            type: "uint8",
          },
          {
            internalType: "enum Functions.CodeLanguage",
            name: "language",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "secrets",
            type: "bytes",
          },
          {
            internalType: "string[]",
            name: "args",
            type: "string[]",
          },
        ],
        internalType: "struct Functions.Request",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
    ],
    name: "estimateCost",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "source",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "secrets",
        type: "bytes",
      },
      {
        internalType: "enum Functions.Location",
        name: "secretsLocation",
        type: "uint8",
      },
      {
        internalType: "string[]",
        name: "args",
        type: "string[]",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
    ],
    name: "executeRequest",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDONPublicKey",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "handleOracleFulfillment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestResponse",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "updateOracleAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e2b38038062001e2b833981016040819052620000349162000198565b600080546001600160a01b0319166001600160a01b038316178155339081906001600160a01b038216620000af5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600280546001600160a01b0319166001600160a01b0384811691909117909155811615620000e257620000e281620000ec565b50505050620001ca565b336001600160a01b03821603620001465760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401620000a6565b600380546001600160a01b0319166001600160a01b03838116918217909255600254604051919216907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b600060208284031215620001ab57600080fd5b81516001600160a01b0381168114620001c357600080fd5b9392505050565b611c5180620001da6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063d22b224a11610081578063f2fde38b1161005b578063f2fde38b146101a0578063f7023bb6146101b3578063fffeb84e146101c657600080fd5b8063d22b224a14610155578063d328a91e14610168578063d4b391751461017057600080fd5b806379ba5097116100b257806379ba50971461011d5780638da5cb5b14610125578063bef3a2f01461014057600080fd5b80630ca76175146100d95780631aa46f59146100ee57806330bda99d1461010a575b600080fd5b6100ec6100e736600461133b565b6101ce565b005b6100f760045481565b6040519081526020015b60405180910390f35b6100ec6101183660046113bd565b610274565b6100ec61028a565b6002546040516001600160a01b039091168152602001610101565b610148610344565b6040516101019190611439565b6100f76101633660046114d5565b6103d2565b610148610541565b61018361017e366004611687565b6105d0565b6040516bffffffffffffffffffffffff9091168152602001610101565b6100ec6101ae366004611799565b610657565b6100ec6101c1366004611799565b61066b565b610148610691565b60008381526001602052604090205483906001600160a01b03163314610220576040517fa0c5ec6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181526001602052604080822080546001600160a01b03191690555182917f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e691a261026e84848461069e565b50505050565b61027c6106f7565b6102868282610753565b5050565b6003546001600160a01b031633146102e95760405162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064015b60405180910390fd5b600280546001600160a01b0319808216339081179093556003805490911690556040516001600160a01b03909116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b60058054610351906117b6565b80601f016020809104026020016040519081016040528092919081815260200182805461037d906117b6565b80156103ca5780601f1061039f576101008083540402835291602001916103ca565b820191906000526020600020905b8154815290600101906020018083116103ad57829003601f168201915b505050505081565b60006103dc6106f7565b6104166040805160c08101909152806000815260200160008152602001600081526020016060815260200160608152602001606081525090565b61045d6000808d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250879594939250506107d39050565b8715610505576000876001811115610477576104776117ea565b036104c3576104be89898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250859392505061086a9050565b610505565b61050589898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525085939250506108b19050565b841561051f5761051f6105188688611800565b82906108de565b600061052c828686610921565b60048190559c9b505050505050505050505050565b60008054604080517fd328a91e00000000000000000000000000000000000000000000000000000000815290516060936001600160a01b039093169263d328a91e92600480820193918290030181865afa1580156105a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105cb919081019061180d565b905090565b600080546001600160a01b031663d227d245856105ec88610a75565b86866040518563ffffffff1660e01b815260040161060d949392919061187b565b602060405180830381865afa15801561062a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064e91906118b7565b95945050505050565b61065f6106f7565b61066881610d0b565b50565b6106736106f7565b600080546001600160a01b0319166001600160a01b03831617905550565b60068054610351906117b6565b60056106aa8382611933565b5060066106b78282611933565b50827f7bab0ec163b5c132c72b8146ac4d6e067e82ed58f8b131150aa71c925891156283836040516106ea9291906119f3565b60405180910390a2505050565b6002546001600160a01b031633146107515760405162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000060448201526064016102e0565b565b60008181526001602052604090205481906001600160a01b0316156107a4576040517f8b457ad200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50600090815260016020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b805160000361080e576040517f22ce3edd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83836001811115610821576108216117ea565b90816001811115610834576108346117ea565b9052506040840182801561084a5761084a6117ea565b9081801561085a5761085a6117ea565b9052506060909301929092525050565b805160000361088c5760405163e889636f60e01b815260040160405180910390fd5b6020820160005b908160018111156108a6576108a66117ea565b905250608090910152565b80516000036108d35760405163e889636f60e01b815260040160405180910390fd5b602082016001610893565b8051600003610919576040517ffe936cb700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a090910152565b6000805481906001600160a01b03166328242b048561093f88610a75565b866040518463ffffffff1660e01b815260040161095e93929190611a18565b6020604051808303816000875af115801561097d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a19190611a51565b905060008054906101000a90046001600160a01b03166001600160a01b0316635ab1bd536040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a189190611a6a565b60008281526001602052604080822080546001600160a01b0319166001600160a01b039490941693909317909255905182917f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db891a2949350505050565b6060610a94604051806040016040528060608152602001600081525090565b610aa081610100610db5565b5060408051808201909152600c81527f636f64654c6f636174696f6e00000000000000000000000000000000000000006020820152610ae0908290610e20565b8251610afe906001811115610af757610af76117ea565b8290610e3c565b60408051808201909152600881527f6c616e67756167650000000000000000000000000000000000000000000000006020820152610b3d908290610e20565b6040830151610b54908015610af757610af76117ea565b60408051808201909152600681527f736f7572636500000000000000000000000000000000000000000000000000006020820152610b93908290610e20565b6060830151610ba3908290610e20565b60a08301515115610c525760408051808201909152600481527f61726773000000000000000000000000000000000000000000000000000000006020820152610bed908290610e20565b610bf681610e62565b60005b8360a0015151811015610c4857610c368460a001518281518110610c1f57610c1f611a87565b602002602001015183610e2090919063ffffffff16565b80610c4081611ab3565b915050610bf9565b50610c5281610e6d565b60808301515115610d045760408051808201909152600f81527f736563726574734c6f636174696f6e00000000000000000000000000000000006020820152610c9c908290610e20565b610cb583602001516001811115610af757610af76117ea565b60408051808201909152600781527f73656372657473000000000000000000000000000000000000000000000000006020820152610cf4908290610e20565b6080830151610d04908290610e78565b5192915050565b336001600160a01b03821603610d635760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016102e0565b600380546001600160a01b0319166001600160a01b03838116918217909255600254604051919216907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b604080518082019091526060815260006020820152610dd5602083611acc565b15610dfd57610de5602083611acc565b610df0906020611aee565b610dfa9083611b01565b91505b506020808301829052604080518085526000815283019091019052815b92915050565b610e2d8260038351610e81565b610e378282610f90565b505050565b67ffffffffffffffff811115610e56576102868282610fbe565b61028682600083610e81565b610668816004610ff5565b610668816007610ff5565b610e2d82600283515b60178167ffffffffffffffff1611610ea65761026e8360e0600585901b168317611006565b60ff8167ffffffffffffffff1611610ee457610ecd836018611fe0600586901b1617611006565b5061026e8367ffffffffffffffff8316600161102b565b61ffff8167ffffffffffffffff1611610f2357610f0c836019611fe0600586901b1617611006565b5061026e8367ffffffffffffffff8316600261102b565b63ffffffff8167ffffffffffffffff1611610f6457610f4d83601a611fe0600586901b1617611006565b5061026e8367ffffffffffffffff8316600461102b565b610f7983601b611fe0600586901b1617611006565b5061026e8367ffffffffffffffff8316600861102b565b604080518082019091526060815260006020820152610fb783846000015151848551611059565b9392505050565b610fc98260c2611006565b506102868282604051602001610fe191815260200190565b604051602081830303815290604052610e78565b610e3782601f611fe0600585901b16175b604080518082019091526060815260006020820152610fb78384600001515184611143565b60408051808201909152606081526000602082015261105184856000015151858561119e565b949350505050565b604080518082019091526060815260006020820152825182111561107c57600080fd5b602085015161108b8386611b01565b11156110be576110be856110ae876020015187866110a99190611b01565b61121f565b6110b9906002611b14565b611236565b6000808651805187602083010193508088870111156110dd5787860182525b505050602084015b6020841061111d57805182526110fc602083611b01565b9150611109602082611b01565b9050611116602085611aee565b93506110e5565b51815160001960208690036101000a019081169019919091161790525083949350505050565b604080518082019091526060815260006020820152836020015183106111785761117884856020015160026110b99190611b14565b8351805160208583010184815350808503611194576001810182525b5093949350505050565b60408051808201909152606081526000602082015260208501516111c28584611b01565b11156111d6576111d6856110ae8685611b01565b600060016111e684610100611c0f565b6111f09190611aee565b90508551838682010185831982511617815250805184870111156112145783860181525b509495945050505050565b600081831115611230575081610e1a565b50919050565b81516112428383610db5565b5061026e8382610f90565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156112865761128661124d565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156112b5576112b561124d565b604052919050565b600067ffffffffffffffff8211156112d7576112d761124d565b50601f01601f191660200190565b600082601f8301126112f657600080fd5b8135611309611304826112bd565b61128c565b81815284602083860101111561131e57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561135057600080fd5b83359250602084013567ffffffffffffffff8082111561136f57600080fd5b61137b878388016112e5565b9350604086013591508082111561139157600080fd5b5061139e868287016112e5565b9150509250925092565b6001600160a01b038116811461066857600080fd5b600080604083850312156113d057600080fd5b82356113db816113a8565b946020939093013593505050565b60005b838110156114045781810151838201526020016113ec565b50506000910152565b600081518084526114258160208601602086016113e9565b601f01601f19169290920160200192915050565b602081526000610fb7602083018461140d565b60008083601f84011261145e57600080fd5b50813567ffffffffffffffff81111561147657600080fd5b60208301915083602082850101111561148e57600080fd5b9250929050565b8035600281106114a457600080fd5b919050565b803567ffffffffffffffff811681146114a457600080fd5b803563ffffffff811681146114a457600080fd5b600080600080600080600080600060c08a8c0312156114f357600080fd5b893567ffffffffffffffff8082111561150b57600080fd5b6115178d838e0161144c565b909b50995060208c013591508082111561153057600080fd5b61153c8d838e0161144c565b909950975087915061155060408d01611495565b965060608c013591508082111561156657600080fd5b818c0191508c601f83011261157a57600080fd5b81358181111561158957600080fd5b8d60208260051b850101111561159e57600080fd5b6020830196508095505050506115b660808b016114a9565b91506115c460a08b016114c1565b90509295985092959850929598565b8035600181106114a457600080fd5b600067ffffffffffffffff808411156115fd576115fd61124d565b8360051b602061160e81830161128c565b8681529350908401908084018783111561162757600080fd5b855b8381101561165b578035858111156116415760008081fd5b61164d8a828a016112e5565b835250908201908201611629565b50505050509392505050565b600082601f83011261167857600080fd5b610fb7838335602085016115e2565b6000806000806080858703121561169d57600080fd5b843567ffffffffffffffff808211156116b557600080fd5b9086019060c082890312156116c957600080fd5b6116d1611263565b6116da83611495565b81526116e860208401611495565b60208201526116f9604084016115d3565b604082015260608301358281111561171057600080fd5b61171c8a8286016112e5565b60608301525060808301358281111561173457600080fd5b6117408a8286016112e5565b60808301525060a08301358281111561175857600080fd5b6117648a828601611667565b60a083015250955061177b915050602086016114a9565b9250611789604086016114c1565b9396929550929360600135925050565b6000602082840312156117ab57600080fd5b8135610fb7816113a8565b600181811c908216806117ca57607f821691505b60208210810361123057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6000610fb73684846115e2565b60006020828403121561181f57600080fd5b815167ffffffffffffffff81111561183657600080fd5b8201601f8101841361184757600080fd5b8051611855611304826112bd565b81815285602083850101111561186a57600080fd5b61064e8260208301602086016113e9565b67ffffffffffffffff8516815260806020820152600061189e608083018661140d565b63ffffffff949094166040830152506060015292915050565b6000602082840312156118c957600080fd5b81516bffffffffffffffffffffffff81168114610fb757600080fd5b601f821115610e3757600081815260208120601f850160051c8101602086101561190c5750805b601f850160051c820191505b8181101561192b57828155600101611918565b505050505050565b815167ffffffffffffffff81111561194d5761194d61124d565b6119618161195b84546117b6565b846118e5565b602080601f831160018114611996576000841561197e5750858301515b600019600386901b1c1916600185901b17855561192b565b600085815260208120601f198616915b828110156119c5578886015182559484019460019091019084016119a6565b50858210156119e35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000611a06604083018561140d565b828103602084015261064e818561140d565b67ffffffffffffffff84168152606060208201526000611a3b606083018561140d565b905063ffffffff83166040830152949350505050565b600060208284031215611a6357600080fd5b5051919050565b600060208284031215611a7c57600080fd5b8151610fb7816113a8565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611ac557611ac5611a9d565b5060010190565b600082611ae957634e487b7160e01b600052601260045260246000fd5b500690565b81810381811115610e1a57610e1a611a9d565b80820180821115610e1a57610e1a611a9d565b8082028115828204841417610e1a57610e1a611a9d565b600181815b80851115611b66578160001904821115611b4c57611b4c611a9d565b80851615611b5957918102915b93841c9390800290611b30565b509250929050565b600082611b7d57506001610e1a565b81611b8a57506000610e1a565b8160018114611ba05760028114611baa57611bc6565b6001915050610e1a565b60ff841115611bbb57611bbb611a9d565b50506001821b610e1a565b5060208310610133831016604e8410600b8410161715611be9575081810a610e1a565b611bf38383611b2b565b8060001904821115611c0757611c07611a9d565b029392505050565b6000610fb78383611b6e56fea2646970667358221220572cdda0b354c2b5fcc00a66cf696c905b20706dba156602f89fa069546b912364736f6c63430008130033";

type FunctionsConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FunctionsConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FunctionsConsumer__factory extends ContractFactory {
  constructor(...args: FunctionsConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    oracle: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FunctionsConsumer> {
    return super.deploy(oracle, overrides || {}) as Promise<FunctionsConsumer>;
  }
  override getDeployTransaction(
    oracle: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(oracle, overrides || {});
  }
  override attach(address: string): FunctionsConsumer {
    return super.attach(address) as FunctionsConsumer;
  }
  override connect(signer: Signer): FunctionsConsumer__factory {
    return super.connect(signer) as FunctionsConsumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FunctionsConsumerInterface {
    return new utils.Interface(_abi) as FunctionsConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FunctionsConsumer {
    return new Contract(address, _abi, signerOrProvider) as FunctionsConsumer;
  }
}
